import type { NextPage } from "next";
import Head from "next/head";
import { memo, useRef } from "react";
import { trpc } from "../utils/trpc";

const random = (min: number, max: number) =>
  Math.floor(Math.random() * (max - min)) + min;

const colors = [
  "#f44336",
  "#ffc107",
  "#4caf50",
  "#03a9f4",
  "#9c27b0",
  "#ffffff",
  "#607d8b",
  "#e91e63",
  "#ff9800",
  "#009688",
];

const getColor = () => {
  return colors[random(0, colors.length)];
};

const Word = ({ children }) => (
  <span
    id="word-element"
    style={{ color: getColor() }}
    className="mr-3 text-xl hover:bg-[#000]"
  >
    {children}
  </span>
);

const WordMemoized = memo(Word);

const Home: NextPage = () => {
  const hello = trpc.example.hello.useQuery({ text: "from tRPC" });

  const words = useRef(
    [...new Array(100)].map(
      () => "Other people using this device won't see your activity."
    )
  );

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="z-2 absolute top-10 left-0 right-0 m-auto h-10 w-80">
        <input
          style={{ color: getColor() }}
          className="center w-full rounded-full border-0 bg-[#0c0f1c] py-4 px-8"
          placeholder="Say hello to ðŸŒŽ world ..."
        />
      </div>

      <main className="container min-h-screen min-w-full bg-[#191e38] p-2">
        <div className="flex flex-row flex-wrap justify-center text-center">
          {words.current.map((word, index) => (
            <WordMemoized key={index}>{word}</WordMemoized>
          ))}
        </div>
      </main>
    </>
  );
};

export default Home;
